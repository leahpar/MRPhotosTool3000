# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    public_directory: '%kernel.project_dir%/public'
    shootings_directory: '%kernel.project_dir%/var/shootings'

    router.request_context.host: '%env(ROUTER_HOST)%'
    router.request_context.scheme: '%env(ROUTER_SCHEME)%'
    #router.request_context.base_url: ''

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            string $public_directory: '%public_directory%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Doctrine Extension listeners to handle behaviors
    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    # Gedmo\Sluggable\Mapping\Driver\Annotation:
    #     class: App\Trucs\AnnotationDriver

    # Pour pouvoir l'autowirer
    Liip\ImagineBundle\Service\FilterService:
        alias: 'liip_imagine.service.filter'

    # Pour pouvoir l'autowirer
    Imagine\Image\ImagineInterface:
        alias: 'liip_imagine.gd'

    # Liip custom filter
    App\ImageFilter\CensureImageFilter:
        tags:
            - { name: "liip_imagine.filter.loader", loader: censure_filter }

    # C'est le RssPublisherService qui sert de publisher
    # https://symfony.com/doc/current/service_container/autowiring.html#working-with-interfaces
    App\Service\PublisherInterface: '@App\Service\RssPublisherService'
    
    